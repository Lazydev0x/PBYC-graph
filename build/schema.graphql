type Approval @entity {
  id: ID!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
}

type ApprovalForAll @entity {
  id: ID!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
}

type OwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}


type Token @entity { 
  id: ID! tokenID: BigInt! 
  tokenURI: String! 
  externalURL: String! 
  ipfsURI: String! 
  image: String! 
  name:  String! 
  description: String! 
  type:  String!
  sun:  String! 
  moon: String! 
  rising: String! 
  updatedAtTimestamp: BigInt! 
  owner: User! 
  } 

  type User @entity { 
    id: ID! tokens: [Token!]! @derivedFrom(field: "owner")

} 

type _Schema_ @fulltext( 
  name: "covenSearch"
  language: en 
  algorithm: rank 
  include: [{entity: "Token", fields:
      [{ name: "name" }, { name: "description" }, { name: "type" }, { name: "sun" }, { name: "moon" }, { name: "rising" }
    ] }]
  )